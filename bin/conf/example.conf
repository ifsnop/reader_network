# example configuration reader_network 0.75c
enabled = true

# multicast | broadcast | file
source = "multicast"

# record for 600 seconds, then exit
timed = 180

# show intervals, if not in daemon mode, every 5 seconds
timed_stats_interval = 5

# if true, fork & record in background, closing stdout output.
# if false, run in foreground, outputing verbose and stats.
mode_daemon = false

# check and drop duplicated asterix packets (doesn't impact performance)
mode_scrm = true

# save data in a directory structure like MM/DD/YYMMDD-region-HHMMSS
# where YY = year, MM = month, DD = day, hh = hour, mm = minutes, ss = seconds
dest_file_timestamp = true

# don't use directory structure, only filename (needs dest_file_timestamp = true)
dest_file_nodirectory = false

# recording file will be compressed with bzip2
dest_file_compress = true

# output classification, several possibilities or commented out
# cen | est | bal | can | sur
#dest_file_region = "cen"

# besides recording output, send decoded data in a multicast group to localhost,
# so other applications could use decoded data (like client_xxxx)
dest_localhost = true

# output crcs to screen, mainly to debug purposes
# dest_screen_crc = false

# ensure asterix versions
#asterix_versions = "8cbe827058a86db6d84c4132e8e111e5"
asterix_versions = "485910c1fc16ed59afd8c84c02325d31"

# define multicast groups to be recorded
# name (used only in stats), mcast group, mcast dest port, source ip address, interface ip address
radar_definition = {
    "p2-210", "225.181.210.1", "4001", "10.181.210.17", "172.88.0.71",
    "p2-209", "225.181.209.1", "4001", "10.181.209.17", "172.88.0.71"
    #"vall210", "225.180.210.1", "4001", "10.180.210.17", "172.88.0.71",
    #"vall209", "225.180.209.1", "4001", "10.180.209.17", "172.88.0.71",
    #"al-210", "225.182.210.2", "8600", "10.182.210.17", "10.69.210.21",
    #"al-209", "225.182.209.2", "8600", "10.182.209.17", "10.69.209.21"
    #"mo-209", "225.185.209.1", "4001", "10.182.209.17", "172.88.0.71"
# SCRM
    #"lan250EXTA", "225.25.250.1", "4001", "214.25.250.1", "214.25.250.17",
    #"lan250EXTB", "225.25.250.1", "4001", "214.25.250.2", "214.25.250.17",
    #"lan249EXTA", "225.25.249.1", "4001", "214.25.250.1", "214.25.249.17",
    #"lan249EXTB", "225.25.249.1", "4001", "214.25.250.2", "214.25.249.17"
    #"testing1",     "225.25.250.1", "4001", "192.168.0.193", "192.168.0.99",
    #"testing1",     "225.25.250.1", "4002", "192.168.0.193", "192.168.0.99"
}

# minimum free space in drive before starting recording, in Megabytes
# only used if timestamped recording
#dest_free_space = 1000

# destination filename. if dest_file_timestamp = true, then dest_file
# will be considered as a directory.
dest_file = "datos/local"

# ast records raw asterix data
# gps timestamps datarecords, appending 10 bytes to each. get last 3 bytes,
# LSB is the last one, and divide the resulting number by 128. timestamp is
# in seconds.
# see source for an example to decode
# ast | gps
#dest_file_format = "ast"
dest_file_format = "gps"

# besides the format, extension can be changed
# ast | sast | gps | sgps
dest_file_extension = "sgps"
#dest_file_extension = "sast"

# ftp plus directory to upload
#dest_ftp_uri = { "ftp://172.88.0.70/pub/swap/" }
dest_ftp_uri = { "ftp://10.69.210.22/pub/swap/" }
#dest_ftp_uri = { "ftp://192.168.0.34/pub/swap/" }

# dest filter
# only available when source is file
# FILTER_GROUND: removes plots from cat48 when ground bit is set
# dest_filter_selection = { "FILTER_GROUND" }
